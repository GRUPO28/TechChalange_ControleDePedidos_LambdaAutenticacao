name: Terraform Deploy

on:
  push:
    branches:
      - main

defaults:
  run:
    working-directory: ./terraform

jobs:
  terraform-deploy:
    name: Deploy Infra with Terraform
    runs-on: ubuntu-latest

    env:
        DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Lambda Dependencies
      run: |
        cd ..
        cd lambda  # Ajuste o caminho para a pasta que contém seu código Lambda
        npm install  # Instala dependências do package.json
        cd ..  # Volta para o diretório anterior
        cd terraform

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.9.6"

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -var "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }}" -var "JWT_SECRET=${{ secrets.JWT_SECRET }}"

    - name: Terraform Apply
      run: terraform apply -auto-approve -var "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }}" -var "JWT_SECRET=${{ secrets.JWT_SECRET }}"